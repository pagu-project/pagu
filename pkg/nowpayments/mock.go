// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/nowpayments/interface.go
//
// Generated by this command:
//
//	mockgen -source=./pkg/nowpayments/interface.go -destination=./pkg/nowpayments/mock.go -package=nowpayments
//

// Package nowpayments is a generated GoMock package.
package nowpayments

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockINowpayments is a mock of INowpayments interface.
type MockINowpayments struct {
	ctrl     *gomock.Controller
	recorder *MockINowpaymentsMockRecorder
	isgomock struct{}
}

// MockINowpaymentsMockRecorder is the mock recorder for MockINowpayments.
type MockINowpaymentsMockRecorder struct {
	mock *MockINowpayments
}

// NewMockINowpayments creates a new mock instance.
func NewMockINowpayments(ctrl *gomock.Controller) *MockINowpayments {
	mock := &MockINowpayments{ctrl: ctrl}
	mock.recorder = &MockINowpaymentsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockINowpayments) EXPECT() *MockINowpaymentsMockRecorder {
	return m.recorder
}

// CreateInvoice mocks base method.
func (m *MockINowpayments) CreateInvoice(priceUSD int, orderID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInvoice", priceUSD, orderID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateInvoice indicates an expected call of CreateInvoice.
func (mr *MockINowpaymentsMockRecorder) CreateInvoice(priceUSD, orderID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInvoice", reflect.TypeOf((*MockINowpayments)(nil).CreateInvoice), priceUSD, orderID)
}

// IsPaid mocks base method.
func (m *MockINowpayments) IsPaid(invoiceID string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsPaid", invoiceID)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IsPaid indicates an expected call of IsPaid.
func (mr *MockINowpaymentsMockRecorder) IsPaid(invoiceID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsPaid", reflect.TypeOf((*MockINowpayments)(nil).IsPaid), invoiceID)
}
