// Code generated by command-generator. DO NOT EDIT.
package calculator

import (
	"github.com/pagu-project/pagu/internal/engine/command"
)

const (
	argNameRewardStake = "stake"
	argNameRewardDays  = "days"
	argNameFeeAmount   = "amount"
)

type calculatorSubCmds struct {
	subCmdReward *command.Command
	subCmdFee    *command.Command
}

func (c *CalculatorCmd) buildSubCmds() *calculatorSubCmds {
	subCmdReward := &command.Command{
		Name:           "reward",
		Help:           "Calculate the PAC coins you can earn based on your validator stake",
		Handler:        c.rewardHandler,
		ResultTemplate: "Approximately you earn {{.reward}} PAC reward, with {{.stake}} stake üîí on your validator in {{.days}} days ‚è∞ with {{.totalPower}} total power ‚ö° of committee.\n\n> Noteüìù: This number is just an estimation. It will vary depending on your stake amount and total network power.\n",
		Args: []*command.Args{
			{
				Name:     "stake",
				Desc:     "The amount of stake in your validator",
				InputBox: command.InputBoxInteger,
				Optional: false,
			},
			{
				Name:     "days",
				Desc:     "The number of days to calculate rewards for (range : 1-365)",
				InputBox: command.InputBoxInteger,
				Optional: false,
			},
		},
	}
	subCmdFee := &command.Command{
		Name:           "fee",
		Help:           "Return the estimated transaction fee on the network",
		Handler:        c.feeHandler,
		ResultTemplate: "Sending {{.amount}} will cost {{.fee}} with current fee percentage.\n",
		Args: []*command.Args{
			{
				Name:     "amount",
				Desc:     "The amount of PAC coins to calculate fee for",
				InputBox: command.InputBoxInteger,
				Optional: false,
			},
		},
	}

	return &calculatorSubCmds{
		subCmdReward: subCmdReward,
		subCmdFee:    subCmdFee,
	}
}

func (c *CalculatorCmd) buildCalculatorCommand() *command.Command {
	calculatorCmd := &command.Command{
		Emoji:       "üßÆ",
		Name:        "calculator",
		Help:        "Perform calculations such as reward and fee estimations",
		SubCommands: make([]*command.Command, 0),
	}

	c.calculatorSubCmds = c.buildSubCmds()

	calculatorCmd.AddSubCommand(c.subCmdReward)
	calculatorCmd.AddSubCommand(c.subCmdFee)

	return calculatorCmd
}
