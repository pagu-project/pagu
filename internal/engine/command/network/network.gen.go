// Code generated by command-generator. DO NOT EDIT.
package network

import (
	"github.com/pagu-project/pagu/internal/engine/command"
	"github.com/pagu-project/pagu/internal/entity"
)

const argNameNodeInfoValidator_address = "validator_address"

type networkSubCmds struct {
	subCmdNodeInfo *command.Command
	subCmdHealth   *command.Command
	subCmdStatus   *command.Command
	subCmdWallet   *command.Command
}

func (c *NetworkCmd) buildSubCmds() *networkSubCmds {
	subCmdNodeInfo := &command.Command{
		Name:           "node-info",
		Help:           "View information about a specific node",
		Handler:        c.nodeInfoHandler,
		ResultTemplate: "**PeerID**: {{.PeerID}}\n**IP Address**: {{.IPAddress}}\n**Agent**: {{.Agent}}\n**Moniker**: {{.Moniker}}\n**Country**: {{.Country}}\n**City**: {{.City}}\n**Region Name**: {{.RegionName}}\n**TimeZone**: {{.TimeZone}}\n**ISP**: {{.ISP}}\n\n## Validator Info üîç\n\n**Number**: {{.Number}}\n**PIP-19 Score**: {{.AvailabilityScore}}\n**Stake**: {{.Stake}} PAC\n",
		TargetBotIDs:   entity.AllBotIDs(),
		Args: []*command.Args{
			{
				Name:     "validator_address",
				Desc:     "The validator address",
				InputBox: command.InputBoxText,
				Optional: false,
			},
		},
	}
	subCmdHealth := &command.Command{
		Name:           "health",
		Help:           "Check the network health status",
		Handler:        c.healthHandler,
		ResultTemplate: "**Network is {{.Status}}**\n**Current Time**: {{.CurrentTime}}\n**Last Block Time**: {{.LastBlockTime}}\n**Time Difference**: {{.TimeDiff}}\n**Last Block Height**: {{.LastBlockHeight}}\n",
		TargetBotIDs:   entity.AllBotIDs(),
	}
	subCmdStatus := &command.Command{
		Name:           "status",
		Help:           "View network statistics",
		Handler:        c.statusHandler,
		ResultTemplate: "**Network Name**: {{.NetworkName}}\n**Connected Peers**: {{.ConnectedPeers}}\n**Validator Count**: {{.ValidatorsCount}}\n**Account Count**: {{.AccountsCount}}\n**Current Block Height**: {{.CurrentBlockHeight}}\n**Total Power**: {{.TotalPower}} PAC\n**Total Committee Power**: {{.TotalCommitteePower}} PAC\n**Circulating Supply**: {{.CirculatingSupply}} PAC\n\n> Noteüìù: This info is from one random network node. Some data may not be consistent.\n",
		TargetBotIDs:   entity.AllBotIDs(),
	}
	subCmdWallet := &command.Command{
		Name:           "wallet",
		Help:           "Show the Pagu wallet info",
		Handler:        c.walletHandler,
		ResultTemplate: "Pagu Wallet:\n\n**Address**: {{.address}}\n**Balance**: {{.balance}}\n",
		TargetBotIDs: []entity.BotID{
			entity.BotID_Moderator,
			entity.BotID_CLI,
		},
	}

	return &networkSubCmds{
		subCmdNodeInfo: subCmdNodeInfo,
		subCmdHealth:   subCmdHealth,
		subCmdStatus:   subCmdStatus,
		subCmdWallet:   subCmdWallet,
	}
}

func (c *NetworkCmd) buildNetworkCommand(botID entity.BotID) *command.Command {
	networkCmd := &command.Command{
		Name:         "network",
		Emoji:        "üåê",
		Active:       true,
		Help:         "Commands for network metrics and information",
		SubCommands:  make([]*command.Command, 0),
		TargetBotIDs: entity.AllBotIDs(),
	}

	c.networkSubCmds = c.buildSubCmds()

	networkCmd.AddSubCommand(botID, c.subCmdNodeInfo)
	networkCmd.AddSubCommand(botID, c.subCmdHealth)
	networkCmd.AddSubCommand(botID, c.subCmdStatus)
	networkCmd.AddSubCommand(botID, c.subCmdWallet)

	return networkCmd
}
